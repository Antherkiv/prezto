#
# A simple theme that displays relevant, contextual information, based on antherkiv one
#
# Authors:
#   Antherkiv <antherkiv@gmail.com>
#

function prompt_antherkiv_build_top_prompt {
  if [[ -n "$_prompt_antherkiv_git" ]]; then
    print -n '${_prompt_antherkiv_git} $_separator '
  fi
  if [[ -n "$python_info" ]]; then
    print -n '${python_info[virtualenv]} $_separator '
  fi
}

function prompt_antherkiv_build_bottom_prompt {
  print -n '${SSH_TTY:+"%F{9}%n%f%F{7}@%f%F{3}%m%f "}%F{4}${_prompt_antherkiv_pwd}%(!. %B%F{1}#%f%b.)${editor_info[keymap]} '
}

function prompt_antherkiv_async_callback {
  case $1 in
    prompt_antherkiv_async_git)
      # We can safely split on ':' because it isn't allowed in ref names.
      IFS=':' read _git_target _git_post_target <<<"$3"

      # The target actually contains 3 space separated possibilities, so we need to
      # make sure we grab the first one.
      _git_target=$(coalesce ${(@)${(z)_git_target}})

      if [[ -z "$_git_target" ]]; then
        # No git target detected, flush the git fragment and redisplay the prompt.
        if [[ -n "$_prompt_antherkiv_git" ]]; then
          _prompt_antherkiv_git=''
          zle && zle reset-prompt
        fi
      else
        # Git target detected, update the git fragment and redisplay the prompt.
        _prompt_antherkiv_git="${_git_target}${_git_post_target}"
        zle && zle reset-prompt
      fi
      ;;
  esac
}

function prompt_antherkiv_async_git {
  cd -q "$1"
  if (( $+functions[git-info] )); then
    git-info
    print ${git_info[status]}
  fi
}

function prompt_antherkiv_async_tasks {
  if (( !${prompt_prezto_async_init:-0} )); then
    async_start_worker prompt_antherkiv -n
    async_register_callback prompt_antherkiv prompt_antherkiv_async_callback
    typeset -g prompt_prezto_async_init=1
  fi

  async_flush_jobs prompt_antherkiv

  async_job prompt_antherkiv prompt_antherkiv_async_git "$PWD"
}

function prompt_antherkiv_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  _prompt_antherkiv_pwd=$(prompt-pwd)

  if (( $+functions[git-dir] )); then
    local new_git_root="$(git-dir 2> /dev/null)"
    if [[ $new_git_root != $_antherkiv_cur_git_root ]]; then
      _prompt_antherkiv_git=''
      _antherkiv_cur_git_root=$new_git_root
    fi
  fi

  if (( $+functions[python-info] )); then
    python-info
  fi

  prompt_antherkiv_async_tasks
}

function prompt_antherkiv_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)
  _prompt_antherkiv_precmd_async_pid=0
  _prompt_antherkiv_precmd_async_data=$(mktemp "${TMPDIR:-/tmp}/antherkiv-prompt-async-XXXXXXXXXX")

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz async && async

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_antherkiv_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ' %B%F{1}❯%F{3}❯%F{2}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{3}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %B%F{2}❮%F{3}❮%F{1}❮%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{2}✛%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{13}⇡%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{13}⇣%f%%b'
  zstyle ':prezto:module:git:info:branch' format ' %%B%F{2}%b%f%%b'
  zstyle ':prezto:module:git:info:remote' format '%R'
  zstyle ':prezto:module:git:info:commit' format ' %%B%F{3}%.7c%f%%b'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{1}✖%f%%b'
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{4}✴%f%%b'
  zstyle ':prezto:module:git:info:position' format ' %%B%F{13}%p%f%%b'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{5}↹%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{6}⼐%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{3}❖%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{7}⊖%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' '%R:%b%p:%c%s%A%B%S%a%d%m%r%U%u'

  # Set up non-zero return value display
  local show_return="✘ "
  # Default is to show the return value
  if zstyle -T ':prezto:module:prompt' show-return-val; then
    show_return+='%? '
  fi
  # Set python-info format
  zstyle ':prezto:module:python:info:virtualenv' format '(pyenv:%f%F{3}%v%F{7})'

  # Get the async worker set up
  _antherkiv_cur_git_root=''

  _prompt_antherkiv_git=''
  _prompt_antherkiv_pwd=''

  # Define prompts.
  PROMPT='
${(e)$(prompt_antherkiv_build_top_prompt)}
${(e)$(prompt_antherkiv_build_bottom_prompt)}'
  RPROMPT='${editor_info[overwrite]}%(?:: %F{1}'
  RPROMPT+=${show_return}
  RPROMPT+='%f)${VIM:+" %B%F{6}V%f%b"}'
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_antherkiv_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2> /dev/null
  prompt_preview_theme 'antherkiv'
}

prompt_antherkiv_setup "$@"


